-----------------------------------Tarefas de Hoje----------------------------

->Perguntar ao jogador quando ele iniciar pelo botão "Iniciar" em qual modo de jogo ele deseja jogar? (Clássico ou Remake)
-Clássico: Todas as artes do jogo foram feitas à mão e vetorizadas pelos programadores. É a verão original do Alter Ego, como ela foi criada. Recomendado para uma primeira jogada, para conhecer a história e os personagens. Após um final ou mais, recomendamos jogar a versão Remake.
-Remake: Todas as artes foram refeitas por intelifência Artificial e consertadas/melhoradas pelos programadores. É um dos motivos de eu ter recriado esse jogo inteiro, para dar uma nova vida à ele. Recomendo jogar esse modo após fazer qualquer um dos finais do primeiro jogo ou platinar (fazer todos os finais) o jogo no modo clássico, embora somente as artes mudem você terá uma nova experiência de jogo.

->Modo da Trilha Sonora: Você deseja ouvir as músicas que foram escolhidas especialmente para o Alter Ego, o  Alter Álbum (são músicas com direitos autorais, que reproduzimos via API do Spotify através do nosso software interno: SpotEgo) ou ouvir apenas as músicas ambiente (uma boa experiência, mas menos empolgante para o jogador [recomendado para streamers e youtubers])? 

->A sua resolução e idioma atual é escolhida automaticamente através das configurações do seu computador. Caso você queira alterar essas configurações, você pode fazer isso no menu de configurações.



-------------------------Concluídos de hoje----------------------

->Sistema de avatares funcional (resolvido);



---------------------Pendentes de hoje---------------------

->Ideia de tradução do Idioma: quando eu conseguir corrigir e inputar todos os diálogos na classe de ListasDialogicas, tudo já vai estar no padrão correto. Dessa forma, pra eu conseguir traduzir tudo é muito mais rápido e fácil. E aí, com um switch no início do código eu consigo selecionar para qual idioma devemos entrar e utilizamos exatamente os mesmos nomes de métodos, mudamos apenas o objeto da classe para acesso. Dessa forma, o sistema de idiomas estará completo.


->Se eu começar a trazer os assets e construir o sistema de avatares, entao eu devo mexer com resoluções. Acho que a forma mais fácil e simples de fazer isso é criando interruptores que dizem em qual resolução deve ser jogado e um outro sistema que identifica automaticamente a resolução para o jogador não ter dor de cabeça com a tela quebrada.




-----------------Comandos para converter LF em CRLF---------
Acesse o terminal do git bash;

Acesse o diretório onde está os arquivos do projeto:
cd "/c/Saphire Game Studio/Projetos Unity/AlterEgoClone/AlterEgo"
cd C:\Projetos Unity\AlterEgo

Dps solte esse comando no terminal:
git config --global core.autocrlf true

E dps converta os arquivos do terminal de LF (linux) para CRL (windows):
converte de LF para CRLF:

find . -type f -exec unix2dos.exe {} \;

Se tudo der certo, vc já vai poder commitar e dar o push no github.

Bônus: (Caso vc precise):
# converte de CRLF para LF:
find . -type f -exec dos2unix.exe {} \;

-----------------Configurações-------------

-Tela/resolução (diria que é bem mais complicado)
-Audio/Spotify (relativamente fácil)
-Idioma - ptbr-ing (bem mais difícil)
-ideia de sistema de idioma: criar uma classe que será um selecionador de idioma.
Se o idioma escolhido for português, todas as variaveis TMP devem ser português.
Isso significa que esse método deve conseguir traduzir tudo o que estiver de texto para o idioma escolhido. Já adianto que esse idioma provavelmente deverá ser inicializado em todas as cenas, no background ou até mesmo dentro dos outros scripts. De repente ele pode entender em qual cena ou scrip estamos e já traduzir de acordo com o scrip escolhido. 

Posso colocar esse script em cada canto que seja inputado um text em algum TMP. E esse método se comunicaria com uma variável static que diria se o jogo deve ser português ou outro idioma definido a partir do menu de configurações ou

----------------Input de assets-------------
-Sistema de avatares (relativamente tranquilo)
-Listas de diálogo (relativamente tranquilo)

-Porte para android
-Ajustes finais

----------------Ideias de softwares para criar-----------------
Criar uma versao do snake para o console, esrito em c#.

--------------------Escolhas----------------------
Eu preciso de uma forma de controle das "escolhas do jogador", para que seja listada em uma espécie de "menu das escolhas realizadas", dessa forma será possível saber quais escolhas o jogador tomou. E ao mesmo tempo, criar um controle geral do progresso do jogador, para saber quais conquistas ele já desbloqueou e quais dados. Devo criar uma espécie de "controle de zeradas", onde eu saiba quantas vezes o jogador zerou o jogo e a partir das escolhas que ele fez, integrar com o sistema de "escolhas do jogador".

Esse sistema será usado para listar quais 


--------------------Achievements------------------
Criar um sistema onde seja possível desbloquear conquistas a partir da gameplay.

--------------------Efeitos especiais----------------------

Integrar efeitos especiais em um sistema de camadas. poderá chover ou nevar, e isso interferirá na interface do jogador.

--------------------Novos puzzles----------------------
Criar mais puzzles para a gameplay.








